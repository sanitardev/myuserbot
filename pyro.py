from pyrogram import Client, filters
import time as t
from datetime import datetime, timedelta
from pyowm import OWM
import random
import pytz
import sqlite3
from PIL import Image, ImageFilter
import tgcrypto

api_id = 7205784
api_hash = "9164fe307074d4487da5ab3d3ea6e6f8"
owm = OWM('2d0e615f0f6238616812b3de17adf18a')
owm.config["language"] = "ru"  
with Client("my_account", api_id, api_hash) as app:
	app.send_message(1451300395, "–Ø –∑–∞–ø—É—â–µ–Ω!")

@app.on_message(filters.command(["vzlom"], prefixes="."))
def vzlom(client, message):
		if message.reply_to_message.from_user.id == 1451300395:
			app.send_message(message.chat.id, "–ñ–æ–ø—É —Å–æ–∑–¥–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è –≤–∑–ª–æ–º–∞—Ç—å!")
			return
		app.send_message(message.chat.id, '–í–∑–ª–æ–º –∂–æ–ø—ã...üåÄ', reply_to_message_id=message.message_id)
		t.sleep(1)
		try:
			app.edit_message_text(message.chat.id, message.message_id+1, f'**–ñ–æ–ø–∞ [{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω–∞!**')
		except BaseException:
			app.edit_message_text(message.chat.id, message.message_id+2, f'**–ñ–æ–ø–∞ [{message.reply_to_message.from_user.first_name}](tg://user?id={message.reply_to_message.from_user.id}) —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω–∞!**')

			


@app.on_message(filters.me & filters.command(["spam"], prefixes="."))
def spam(client, message):
	text = message.text.split()
	for spam in range(int(text[2])):
		app.send_message(message.chat.id, text[1])

@app.on_message(filters.command(["time"], prefixes="."))
def time(client, message):
	current_date = datetime.now(pytz.timezone('Europe/Moscow'))
	current_date_string = current_date.strftime('%d %B %A %Y %X')
	current_date_string = current_date_string.replace("September", "–°–µ–Ω—Ç—è–±—Ä—å").replace("October", "–û–∫—Ç—è–±—Ä—å").replace("November", "–ù–æ—è–±—Ä—å").replace("December", "–î–µ–∫–∞–±—Ä—å").replace("Januare", "–Ø–Ω–≤–∞—Ä—å").replace("February", "–§–µ–≤—Ä–∞–ª—å").replace("March", "–ú–∞—Ä—Ç").replace("April", "–ê–ø—Ä–µ–ª—å").replace("May", "–ú–∞–π").replace("June", "–ò—é–Ω—å").replace("July", "–ò—é–ª—å").replace("August", "–ê–≤–≥—É—Å—Ç").replace("Monday", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫").replace("Tuesday", "–í—Ç–æ—Ä–Ω–∏–∫").replace("Wednesday", "–°—Ä–µ–¥–∞").replace("Thursday", "–ß–µ—Ç–≤–µ—Ä–≥").replace("Friday", "–ü—è—Ç–Ω–∏—Ü—ã").replace("Saturday", "–°—É–±–±–æ—Ç–∞").replace("Sunday", "–í–æ—Å—Ä–µ")
	app.send_message(message.chat.id, f"**–í—Ä–µ–º—è –ø–æ –ú–æ—Å–∫–≤–µ: {current_date_string}**")

@app.on_message(filters.command(["weather"], prefixes="."))
def weather(client, message):
		city = message.text[9:]
		mgr = owm.weather_manager()
		try:
			observation = mgr.weather_at_place(city)
		except BaseException:
			app.send_message(message.chat.id, "**–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω**", reply_to_message_id=message.message_id)
			return	
		w = observation.weather
		temp = w.temperature('celsius')
		t = temp["temp"]
		noww = w.detailed_status
		app.send_message(message.chat.id, f'**[{message.from_user.first_name}](tg://user?id={message.from_user.id}), –≤ –≥–æ—Ä–æ–¥–µ {city} —Å–µ–π—á–∞—Å {t} –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –¶–µ–ª—å—Å–∏—é, –∞ —Ç–∞–∫–∂–µ —Å–µ–π—á–∞—Å {noww}.**', reply_to_message_id=message.message_id)


@app.on_message(filters.command(["help"], prefixes="."))
def help(client, message):
	app.send_message(message.chat.id, '–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n.vzlom - –≤–∑–ª–∞–º—ã–≤–∞–µ—Ç –∂–æ–ø—É —á–µ–ª–æ–≤–µ–∫–∞ (—Ä–µ–ø–ª–∞–π)\n.time - –≤—Ä–µ–º—è –≤ –º—Å–∫\n.weather (–ì–æ—Ä–æ–¥) - –ø–æ–∫–∞–∑—ã–≤–µ—Ç –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ\n.random (–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ) (–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ) - –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –¥–≤—É—Ö —á–∏—Å–µ–ª, —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–¥–Ω–∏–º —á–∏—Å–ª–æ–º\n.shakal (—Ñ–æ—Ç–æ) - —à–∞–∫–∞–ª–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É\n.blur (—Ñ–æ—Ç–æ) - –±–ª—é—Ä–∏—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É\n.pidoras - –∏—â–µ—Ç –ø–∏–¥–æ—Ä–∞—Å–∞ \n.dolbaeb - –∏—â–µ—Ç –¥–æ–ª–±–∞–µ–±–∞\n.click - –∫–ª–∏–∫–µ—Ä')


@app.on_message(filters.command(["random"], prefixes="."))
def randomchislo(client, message):
	text = message.text.split()
	if len(text) == 3:
		r1 = random.randint(int(text[1]), int(text[2]))
		app.send_message(message.chat.id, f"–¢–≤–æ–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {r1}")
	elif len(text) == 2:
		r2 = random.randint(1, int(text[1]))
		app.send_message(message.chat.id, f"–¢–≤–æ–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {r2}")

@app.on_message(filters.command(["shakal"], prefixes="."))
def shakal(client, message):
	size = (128, 128)
	path = "shakal.png"
	app.download_media(message.photo, file_name=path, block=True)
	original = Image.open("downloads/shakal.png")
	original.thumbnail(size)
	original.save("saved/shakal.png")
	original.show()
	app.send_photo(message.chat.id, "saved/shakal.png", caption="–í–æ—Ç —Ç–≤–æ–µ —Ñ–æ—Ç–æ:", reply_to_message_id=message.message_id)

@app.on_message(filters.command(["blur"], prefixes="."))
def blur(client, message):
	path = "shakal.png"
	app.download_media(message.photo, file_name=path, block=True)
	original = Image.open("downloads/shakal.png")
	blur = original.filter(ImageFilter.GaussianBlur(5))

	blur.save("saved/shakal.png")
	app.send_photo(message.chat.id, "saved/shakal.png", caption="–í–æ—Ç —Ç–≤–æ–µ —Ñ–æ—Ç–æ:", reply_to_message_id=message.message_id)


@app.on_message(filters.command(["click"], prefixes="."))
def bibvitec(client, message):
	conn = sqlite3.connect('db.db', check_same_thread=False)
	cursor = conn.cursor()
	cursor.execute(f'INSERT OR IGNORE INTO click (user_id) VALUES ({message.from_user.id})')
	conn.commit()
	cursor.execute(f"UPDATE click SET balance = balance + 1 WHERE user_id = {message.from_user.id}")
	conn.commit()
	cursor.execute(f"SELECT balance FROM click WHERE user_id = {message.from_user.id}")
	balance = cursor.fetchone()	
	app.send_message(message.chat.id, f"[{message.from_user.first_name}](tg://user?id={message.from_user.id}) +1! –ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É {balance[0]} –∫–ª–∏–∫–æ–≤.", reply_to_message_id=message.message_id)
	
@app.on_message(filters.command(["pidoras"], prefixes="."))
def pidoras(client, message):
	list1 = []
	for member in app.iter_chat_members(message.chat.id):
		list1.append(member.user.id)
	pidoras = random.choice(list1)
	chto = app.get_users(pidoras)
	app.send_message(message.chat.id, '–ü–æ–∏—Å–∫ –ø–∏–¥–æ—Ä–∞—Å–∞...üåÄ', reply_to_message_id=message.message_id)
	t.sleep(1)
	try:
		app.edit_message_text(message.chat.id, message.message_id+1, f'**[{chto.first_name}](tg://user?id={pidoras}) –ø–∏–¥–æ—Ä–∞—Å!**')
	except BaseException:
		app.edit_message_text(message.chat.id, message.message_id+2, f'**[{chto.first_name}](tg://user?id={pidoras}) –ø–∏–¥–æ—Ä–∞—Å!**')

@app.on_message(filters.command(["dolbaeb"], prefixes="."))
def dolbaeb(client, message):
	list1 = []
	for member in app.iter_chat_members(message.chat.id):
		list1.append(member.user.id)
	pidoras = random.choice(list1)
	chto = app.get_users(pidoras)
	app.send_message(message.chat.id, '–ü–æ–∏—Å–∫ –¥–æ–ª–±–∞–µ–±–∞...üåÄ', reply_to_message_id=message.message_id)
	t.sleep(1)
	try:
		app.edit_message_text(message.chat.id, message.message_id+1, f'**[{chto.first_name}](tg://user?id={pidoras}) –¥–æ–ª–±–∞–µ–±!**')
	except BaseException:
		app.edit_message_text(message.chat.id, message.message_id+2, f'**[{chto.first_name}](tg://user?id={pidoras}) –¥–æ–ª–±–∞–µ–±!**')





app.run()